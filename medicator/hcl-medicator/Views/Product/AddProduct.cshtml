@model hcl_medicator.Models.ProductModel

@{
    ViewBag.Title = "Add Product";
    Layout = "~/Views/Account/_Layout.cshtml";
}

<!-- Latest Bootstrap CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/MyStyle.css" rel="stylesheet" />

<div class="container mt-5">
    <h2 class="fw-bold">Add Product</h2>
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.ProductID, new { @class = "form-label" })
                    @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Name, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Description, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Price, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.QuantityAvailable, new { @class = "form-label" })
                    @Html.EditorFor(model => model.QuantityAvailable, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuantityAvailable, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.SellerID, new { @class = "form-label" })
                    @Html.EditorFor(model => model.SellerID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SellerID, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-outline-primary" />
                </div>
            }

            @using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { @class = "form-inline mt-2" }))
            {
                <input type="submit" value="Logout" class="btn btn-outline-secondary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-secondary ml-2" })
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
